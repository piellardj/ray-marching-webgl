{"version":3,"sources":["webpack://ray-marching-webgl/./src/ts/drawer.ts","webpack://ray-marching-webgl/./src/ts/gl-utils/gl-canvas.ts","webpack://ray-marching-webgl/./src/ts/gl-utils/gl-resource.ts","webpack://ray-marching-webgl/./src/ts/gl-utils/shader-manager.ts","webpack://ray-marching-webgl/./src/ts/gl-utils/shader-sources.ts","webpack://ray-marching-webgl/./src/ts/gl-utils/shader.ts","webpack://ray-marching-webgl/./src/ts/gl-utils/vbo.ts","webpack://ray-marching-webgl/./src/ts/gl-utils/viewport.ts","webpack://ray-marching-webgl/./src/ts/main.ts","webpack://ray-marching-webgl/./src/ts/orbital-camera.ts","webpack://ray-marching-webgl/./src/ts/parameters.ts","webpack://ray-marching-webgl/./src/ts/time.ts","webpack://ray-marching-webgl/webpack/bootstrap","webpack://ray-marching-webgl/webpack/startup"],"names":["UNIT_CUBE","Float32Array","gl","shaders","undefined","this","VBO","FLOAT","pMatrix","mat4","create","mvpMatrix","camera","OrbitalCamera","phi","theta","maxPhi","Math","PI","updateBackgroundColor","backgroundColor","Parameters","clearColor","r","g","b","Page","Canvas","Observers","mouseDrag","push","dX","dY","min","max","updateMVPMatrix","mouseWheel","delta","d","distance","canvasResize","enable","CULL_FACE","frontFace","CCW","cullFace","FRONT","disable","DEPTH_TEST","BLEND","addBackgroundColorObserver","draw","clear","COLOR_BUFFER_BIT","shader","chooseShader","showLoader","a","u","value","eyePos","scaling","threshold","shape","getTime","avoidClipping","smoothNormals","use","bindUniformsAndAttributes","drawArrays","TRIANGLES","perspective","getAspectRatio","multiply","viewMatrix","chooseVariation","name","baseGroup","choosePrecision","dimension","group","fragmentFilename","nbSteps","callback","precision","rayMarchingPrecision","ShaderManager","buildShader","vertexFilename","injected","toString","builtShader","Demopage","setErrorMessage","noiseDimension","ENoiseDimension","THREE_D","threeDimensions","fourDimensions","noiseType","ENoiseType","VALUE","valueNoise","GRADIENT","gradientNoise","simplexNoise","Drawer","initGL","flags","setError","message","canvas","getCanvas","getContext","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","floor","clientWidth","height","clientHeight","_gl","GLResource","cachedShaders","infos","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","replace","match","vert","ShaderSources","getSource","frag","processedVert","processedFrag","Shader","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","deleteShader","freeGLResources","cachedSources","filename","text","XMLHttpRequest","open","onload","readyState","status","responseText","console","error","statusText","onerror","send","notImplemented","alert","types","str","binder","location","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","Array","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","Object","keys","forEach","uName","uniform","loc","bindAttributes","aName","attribute","bind","ACTIVE_UNIFORMS","i","getActiveUniform","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","Usage","array","staticUsage","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","setData","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","Viewport","GLCanvas","needToAdjustCanvasSize","drawer","timeOfLastFPSUpdate","performance","now","framesSinceLastFPSUpdate","setInterval","fps","setIndicatorText","round","mainLoop","requestAnimationFrame","main","focusPoint","_focus","_distance","_theta","_phi","_eyePos","_viewMatrix","recompute","newFocus","newDistance","newTheta","newPhi","sin","cos","lookAt","controlId","speedChangeObservers","updateIndicatorsVisibility","visible","Checkbox","isChecked","setIndicatorsVisibility","Range","addObserver","observer","backgroundColorChangeObservers","rgb","ColorPicker","getValue","Tabs","getValues","addSpeedChangeObserver","lastCheckpoint","lastCheckpointTime","updateCheckpoint","newCheckpoint","Date","speed","currentTimeInMs","newSpeed","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","call"],"mappings":"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","file":"main.min.js","sourcesContent":["import { Shader } from \"./gl-utils/shader\";\r\nimport { VBO } from \"./gl-utils/vbo\";\r\nimport * as ShaderManager from \"./gl-utils/shader-manager\";\r\nimport { OrbitalCamera } from \"./orbital-camera\";\r\nimport { getTime } from \"./time\";\r\n\r\ndeclare const mat4: any;\r\n\r\nimport \"./page-interface-generated\";\r\nimport { ENoiseDimension, ENoiseType, Parameters } from \"./parameters\";\r\n\r\nconst UNIT_CUBE = new Float32Array([\r\n    -.5, -.5, -.5,\r\n    +.5, -.5, -.5,\r\n    -.5, -.5, +.5,\r\n    +.5, -.5, -.5,\r\n    +.5, -.5, +.5,\r\n    -.5, -.5, +.5,\r\n\r\n    +.5, -.5, -.5,\r\n    +.5, +.5, -.5,\r\n    +.5, -.5, +.5,\r\n    +.5, +.5, -.5,\r\n    +.5, +.5, +.5,\r\n    +.5, -.5, +.5,\r\n\r\n    -.5, -.5, +.5,\r\n    +.5, -.5, +.5,\r\n    -.5, +.5, +.5,\r\n    +.5, -.5, +.5,\r\n    +.5, +.5, +.5,\r\n    -.5, +.5, +.5,\r\n\r\n    -.5, +.5, -.5,\r\n    -.5, +.5, +.5,\r\n    +.5, +.5, -.5,\r\n    +.5, +.5, -.5,\r\n    -.5, +.5, +.5,\r\n    +.5, +.5, +.5,\r\n\r\n    -.5, -.5, -.5,\r\n    -.5, -.5, +.5,\r\n    -.5, +.5, -.5,\r\n    -.5, +.5, -.5,\r\n    -.5, -.5, +.5,\r\n    -.5, +.5, +.5,\r\n\r\n    -.5, -.5, -.5,\r\n    -.5, +.5, -.5,\r\n    +.5, -.5, -.5,\r\n    +.5, -.5, -.5,\r\n    -.5, +.5, -.5,\r\n    +.5, +.5, -.5,\r\n]);\r\n\r\ninterface IShaderPrecisions {\r\n    [stepsCount: number]: Shader | null;\r\n}\r\n\r\ninterface IShaderVariations {\r\n    threeDimensions?: IShaderPrecisions;\r\n    fourDimensions?: IShaderPrecisions;\r\n}\r\n\r\ninterface IShadersCollection {\r\n    valueNoise?: IShaderVariations;\r\n    gradientNoise?: IShaderVariations;\r\n    simplexNoise?: IShaderVariations;\r\n}\r\n\r\nclass Drawer {\r\n    private readonly gl: WebGLRenderingContext\r\n    private readonly VBO: VBO;\r\n    private readonly pMatrix: number[];\r\n    private readonly mvpMatrix: number[];\r\n\r\n    private readonly camera: OrbitalCamera;\r\n\r\n    private shaders: IShadersCollection = undefined;\r\n\r\n    public constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n        this.VBO = new VBO(gl, UNIT_CUBE, 3, gl.FLOAT, true);\r\n\r\n        this.pMatrix = mat4.create();\r\n        this.mvpMatrix = mat4.create();\r\n        this.camera = new OrbitalCamera([0, 0, 0], 1);\r\n        this.camera.phi = 1.1;\r\n        this.camera.theta = 2;\r\n\r\n        const EPSILON = 1.0;\r\n        const minPhi = EPSILON;\r\n        const maxPhi = Math.PI - EPSILON;\r\n        Page.Canvas.Observers.mouseDrag.push((dX: number, dY: number) => {\r\n            this.camera.theta -= 0.5 * 2 * 3.14159 * dX;\r\n            this.camera.phi -= 0.5 * 2 * 3 * dY;\r\n            this.camera.phi = Math.min(maxPhi, Math.max(minPhi, this.camera.phi));\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        const minDist = 0.52;\r\n        const maxDist = 3;\r\n        Page.Canvas.Observers.mouseWheel.push((delta: number) => {\r\n            let d = this.camera.distance + 0.2 * delta;\r\n            d = Math.min(maxDist, Math.max(minDist, d));\r\n            this.camera.distance = d;\r\n            this.updateMVPMatrix();\r\n        });\r\n        this.updateMVPMatrix();\r\n\r\n        Page.Canvas.Observers.canvasResize.push(() => {\r\n            this.updateMVPMatrix();\r\n        });\r\n\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.frontFace(gl.CCW);\r\n        gl.cullFace(gl.FRONT);\r\n        gl.disable(gl.DEPTH_TEST);\r\n        gl.disable(gl.BLEND);\r\n\r\n        function updateBackgroundColor(): void {\r\n            const backgroundColor = Parameters.backgroundColor;\r\n            gl.clearColor(backgroundColor.r / 255, backgroundColor.g / 255, backgroundColor.b / 255, 1);\r\n        }\r\n        Parameters.addBackgroundColorObserver(updateBackgroundColor);\r\n        updateBackgroundColor();\r\n    }\r\n\r\n    public draw(): void {\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n\r\n        const shader = this.chooseShader();\r\n        if (shader !== null) {\r\n            Page.Canvas.showLoader(false);\r\n            shader.a[\"aPosition\"].VBO = this.VBO;\r\n            shader.u[\"uMVPMatrix\"].value = this.mvpMatrix;\r\n            shader.u[\"uEyePosition\"].value = this.camera.eyePos;\r\n            shader.u[\"uScaling\"].value = Parameters.scaling;\r\n            shader.u[\"uThreshold\"].value = Parameters.threshold;\r\n            shader.u[\"uShape\"].value = Parameters.shape;\r\n            shader.u[\"uTime\"].value = getTime();\r\n            shader.u[\"uAvoidClipping\"].value = +Parameters.avoidClipping;\r\n            shader.u[\"uSmoothNormals\"].value = Parameters.smoothNormals;\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n            this.gl.drawArrays(this.gl.TRIANGLES, 0, 3 * 2 * 6);\r\n        }\r\n    }\r\n\r\n    private updateMVPMatrix(): void {\r\n        mat4.perspective(this.pMatrix, 45, Page.Canvas.getAspectRatio(), 0.1, 100.0);\r\n        mat4.multiply(this.mvpMatrix, this.pMatrix, this.camera.viewMatrix);\r\n    }\r\n\r\n    private chooseShader(): Shader | null {\r\n        function buildShader(fragmentFilename: string, nbSteps: number, callback: (shader: Shader) => unknown): void {\r\n            ShaderManager.buildShader(\r\n                {\r\n                    fragmentFilename,\r\n                    vertexFilename: \"shader.vert\",\r\n                    injected: {\r\n                        \"STEPS_COUNT\": nbSteps.toString(),\r\n                    },\r\n                }, (builtShader: Shader | null) => {\r\n                    if (builtShader !== null) {\r\n                        callback(builtShader);\r\n                    } else {\r\n                        Page.Demopage.setErrorMessage(`shader_load_fail_${fragmentFilename}`, `Failed to load/build the shader '${fragmentFilename}'.`);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n\r\n        function chooseVariation(name: string, baseGroup: IShaderVariations): Shader | null {\r\n            function choosePrecision(dimension: string, group: IShaderPrecisions): Shader | null {\r\n                const precision = Parameters.rayMarchingPrecision;\r\n\r\n                if (typeof group[precision] === \"undefined\") {\r\n                    Page.Canvas.showLoader(true);\r\n                    group[precision] = null;\r\n                    buildShader(`shader-${name}-${dimension}.frag`, precision, (shader: Shader) => {\r\n                        group[precision] = shader;\r\n                    });\r\n                }\r\n                return group[precision];\r\n            }\r\n\r\n            if (Parameters.noiseDimension === ENoiseDimension.THREE_D) {\r\n                baseGroup.threeDimensions = baseGroup.threeDimensions || {};\r\n                return choosePrecision(Parameters.noiseDimension, baseGroup.threeDimensions);\r\n            } else {\r\n                baseGroup.fourDimensions = baseGroup.fourDimensions || {};\r\n                return choosePrecision(Parameters.noiseDimension, baseGroup.fourDimensions);\r\n            }\r\n        }\r\n\r\n        this.shaders = this.shaders || {};\r\n\r\n        if (Parameters.noiseType === ENoiseType.VALUE) {\r\n            this.shaders.valueNoise = this.shaders.valueNoise || {};\r\n            return chooseVariation(Parameters.noiseType, this.shaders.valueNoise);\r\n        } else if (Parameters.noiseType === ENoiseType.GRADIENT) {\r\n            this.shaders.gradientNoise = this.shaders.gradientNoise || {};\r\n            return chooseVariation(Parameters.noiseType, this.shaders.gradientNoise);\r\n        } else {\r\n            this.shaders.simplexNoise = this.shaders.simplexNoise || {};\r\n            return chooseVariation(Parameters.noiseType, this.shaders.simplexNoise);\r\n        }\r\n    }\r\n}\r\n\r\nexport { Drawer };\r\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags?: object): boolean {\r\n    function setError(message: string): void {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(`Your browser or device only supports experimental WebGL.\r\nThe simulation may not run as expected.`);\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport { GLResource };\r\n","import { gl } from \"./gl-canvas\";\r\nimport { Shader } from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader | null;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader } = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback): void {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean): void {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match: string, name: string) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader): void {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader: Shader | null) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string): void {\r\n    if (typeof cachedShaders[name] !== \"undefined\") {\r\n        if (cachedShaders[name].shader !== null) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedSource): void {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(`Cannot load '${filename}' shader source: ${xhr.statusText}`);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(`Cannot load '${filename}' shader source: ${xhr.statusText}`);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import { GLResource } from \"./gl-resource\";\r\nimport { VBO } from \"./vbo\";\r\n\r\nfunction notImplemented(): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n    value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture((gl as any)[\"TEXTURE\" + unitNb] as number);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\ninterface IBindingType {\r\n    str: string;\r\n    binder: (...args: any[]) => unknown;\r\n}\r\nconst types: { [index: string]: IBindingType } = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: { [name: string]: IShaderUniform };\r\n    public a: { [name: string]: IShaderAttribute };\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName: string) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName: string) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = {};\r\n        for (let i = 0; i < this.uCount; i++) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = {};\r\n        for (let i = 0; i < this.aCount; i++) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { ShaderProgram as Shader };\r\n","import { GLResource } from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport { VBO };\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport { Viewport };\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport { Viewport } from \"./gl-utils/viewport\";\r\n\r\nimport { Drawer } from \"./drawer\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction main(): void {\r\n    if (!GLCanvas.initGL()) {\r\n        return;\r\n    }\r\n\r\n    let needToAdjustCanvasSize = true;\r\n    function adjustCanvasSize(): void {\r\n        if (needToAdjustCanvasSize) {\r\n            GLCanvas.adjustSize(false);\r\n            Viewport.setFullCanvas(gl);\r\n            needToAdjustCanvasSize = false;\r\n        }\r\n    }\r\n    Page.Canvas.Observers.canvasResize.push(() => { needToAdjustCanvasSize = true; });\r\n\r\n    const drawer = new Drawer(gl);\r\n\r\n    let timeOfLastFPSUpdate = performance.now();\r\n    let framesSinceLastFPSUpdate = 0;\r\n    setInterval(() => {\r\n        const now = performance.now();\r\n        const fps = 1000 * framesSinceLastFPSUpdate / (now - timeOfLastFPSUpdate);\r\n        timeOfLastFPSUpdate = now;\r\n        framesSinceLastFPSUpdate = 0;\r\n\r\n        Page.Canvas.setIndicatorText(\"fps-indicator\", Math.round(fps).toString());\r\n    }, 500);\r\n\r\n    function mainLoop(): void {\r\n        framesSinceLastFPSUpdate++;\r\n\r\n        adjustCanvasSize();\r\n        drawer.draw();\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n    mainLoop();\r\n}\r\n\r\nmain();\r\n","declare const mat4: any;\r\n\r\nclass OrbitalCamera {\r\n    private _focus: number[];\r\n    private _distance: number;\r\n    private _theta: number;\r\n    private _phi: number;\r\n\r\n    private _eyePos: number[];\r\n    private _viewMatrix: number[];\r\n\r\n    constructor(focusPoint: number[], distance: number) {\r\n        this._focus = focusPoint;\r\n        this._distance = distance;\r\n        this._theta = 0;\r\n        this._phi = 0.01;\r\n\r\n        this._eyePos = [0, 0, 0];\r\n        this._viewMatrix = mat4.create();\r\n        this.recompute();\r\n    }\r\n\r\n    public get focusPoint(): number[] {\r\n        return this._focus;\r\n    }\r\n    public set focusPoint(newFocus: number[]) {\r\n        this._focus = newFocus;\r\n        this.recompute();\r\n    }\r\n\r\n    public get distance(): number {\r\n        return this._distance;\r\n    }\r\n    public set distance(newDistance: number) {\r\n        this._distance = newDistance;\r\n        this.recompute();\r\n    }\r\n\r\n    public get theta(): number {\r\n        return this._theta;\r\n    }\r\n    public set theta(newTheta: number) {\r\n        this._theta = newTheta;\r\n        this.recompute();\r\n    }\r\n\r\n    public get phi(): number {\r\n        return this._phi;\r\n    }\r\n    public set phi(newPhi: number) {\r\n        this._phi = newPhi;\r\n        this.recompute();\r\n    }\r\n\r\n    public get eyePos(): number[] {\r\n        return this._eyePos;\r\n    }\r\n\r\n    public get viewMatrix(): number[] {\r\n        return this._viewMatrix;\r\n    }\r\n\r\n    private recompute(): void {\r\n        const sin = Math.sin;\r\n        const cos = Math.cos;\r\n\r\n        this._eyePos[0] = this.focusPoint[0] + this.distance * (sin(this.phi) * cos(this.theta));\r\n        this._eyePos[1] = this.focusPoint[1] + this.distance * (sin(this.phi) * sin(this.theta));\r\n        this._eyePos[2] = this.focusPoint[2] + this.distance * (cos(this.phi));\r\n\r\n        this._viewMatrix = mat4.lookAt(this._viewMatrix, this.eyePos, this.focusPoint, [0, 0, 1]);\r\n    }\r\n}\r\n\r\nexport { OrbitalCamera };\r\n","import \"./page-interface-generated\";\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    NOISE_TYPE: \"noise-type\",\r\n    NOISE_DIMENSION: \"noise-dimension\",\r\n    NOISE_SCALING: \"noise-scaling-range-id\",\r\n    NOISE_THRESHOLD: \"noise-threshold-range-id\",\r\n    NOISE_SHAPE: \"noise-shape-range-id\",\r\n    AVOID_CLIPPING: \"avoid-clipping-checkbox-id\",\r\n    SPEED: \"speed-range-id\",\r\n    RAY_MARCHING_PRECISION: \"ray-marching-stepsize\",\r\n    SMOOTH_NORMALS: \"smooth-normals-checkbox-id\",\r\n    BACKGROUND_COLOR_PICKER: \"background-color-picker-id\",\r\n    DISPLAY_INDICATORS: \"display-indicators-checkbox-id\",\r\n};\r\n\r\ntype Observer = () => unknown;\r\nconst speedChangeObservers: Observer[] = [];\r\nPage.Range.addObserver(controlId.SPEED, () => {\r\n    for (const observer of speedChangeObservers) {\r\n        observer();\r\n    }\r\n});\r\n\r\nfunction updateIndicatorsVisibility(): void {\r\n    const visible = Page.Checkbox.isChecked(controlId.DISPLAY_INDICATORS);\r\n    Page.Canvas.setIndicatorsVisibility(visible);\r\n}\r\nupdateIndicatorsVisibility();\r\nPage.Checkbox.addObserver(controlId.DISPLAY_INDICATORS, updateIndicatorsVisibility);\r\n\r\ninterface IRGB {\r\n    r: number,\r\n    g: number,\r\n    b: number,\r\n}\r\n\r\nconst backgroundColorChangeObservers: Observer[] = [];\r\nconst backgroundColor: IRGB = { r: 0, g: 0, b: 0 };\r\nfunction updateBackgroundColor(): void {\r\n    const rgb = Page.ColorPicker.getValue(controlId.BACKGROUND_COLOR_PICKER);\r\n    backgroundColor.r = rgb.r;\r\n    backgroundColor.g = rgb.g;\r\n    backgroundColor.b = rgb.b;\r\n\r\n    for (const observer of backgroundColorChangeObservers) {\r\n        observer();\r\n    }\r\n}\r\nPage.ColorPicker.addObserver(controlId.BACKGROUND_COLOR_PICKER, updateBackgroundColor);\r\nupdateBackgroundColor();\r\n\r\nenum ENoiseType {\r\n    VALUE = \"value\",\r\n    GRADIENT = \"gradient\",\r\n    SIMPLEX = \"simplex\",\r\n}\r\n\r\nenum ENoiseDimension {\r\n    THREE_D = \"3d\",\r\n    FOUR_D = \"4d\",\r\n}\r\n\r\nabstract class Parameters {\r\n    public static get noiseType(): ENoiseType {\r\n        return Page.Tabs.getValues(controlId.NOISE_TYPE)[0] as ENoiseType;\r\n    }\r\n\r\n    public static get noiseDimension(): ENoiseDimension {\r\n        return Page.Tabs.getValues(controlId.NOISE_DIMENSION)[0] as ENoiseDimension;\r\n    }\r\n\r\n    public static get scaling(): number {\r\n        return Page.Range.getValue(controlId.NOISE_SCALING);\r\n    }\r\n\r\n    public static get threshold(): number {\r\n        return Page.Range.getValue(controlId.NOISE_THRESHOLD);\r\n    }\r\n\r\n    public static get avoidClipping(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.AVOID_CLIPPING);\r\n    }\r\n\r\n    public static get shape(): number {\r\n        return Page.Range.getValue(controlId.NOISE_SHAPE);\r\n    }\r\n\r\n    public static get speed(): number {\r\n        return Page.Range.getValue(controlId.SPEED);\r\n    }\r\n    public static addSpeedChangeObserver(observer: Observer): void {\r\n        speedChangeObservers.push(observer);\r\n    }\r\n\r\n    public static get backgroundColor(): IRGB {\r\n        return backgroundColor;\r\n    }\r\n    public static addBackgroundColorObserver(observer: Observer): void {\r\n        backgroundColorChangeObservers.push(observer);\r\n    }\r\n\r\n    public static get rayMarchingPrecision(): number {\r\n        return +Page.Tabs.getValues(controlId.RAY_MARCHING_PRECISION)[0];\r\n    }\r\n\r\n    public static get smoothNormals(): boolean {\r\n        return Page.Checkbox.isChecked(controlId.SMOOTH_NORMALS);\r\n    }\r\n}\r\n\r\nexport {\r\n    ENoiseDimension,\r\n    ENoiseType,\r\n    Parameters,\r\n}\r\n","import { Parameters } from \"./parameters\";\r\n\r\nlet lastCheckpoint: number; // in relative time\r\nlet lastCheckpointTime: number; // in actual time\r\n\r\nfunction updateCheckpoint(newCheckpoint: number): void {\r\n    lastCheckpoint = newCheckpoint;\r\n    lastCheckpointTime = Date.now();\r\n}\r\nupdateCheckpoint(0);\r\n\r\nlet speed = Parameters.speed;\r\nfunction updateSpeed(): void {\r\n    const newSpeed = Parameters.speed;\r\n    updateCheckpoint(currentTimeInMs());\r\n    speed = newSpeed;\r\n}\r\nParameters.addSpeedChangeObserver(updateSpeed);\r\n\r\nfunction currentTimeInMs(): number {\r\n    return lastCheckpoint + speed * (Date.now() - lastCheckpointTime);\r\n}\r\n\r\n/* Elapsed time in seconds since the application start.\r\n * This time is relative and can be slowed down and made quicker with controls. */\r\nfunction getTime(): number {\r\n    return 0.001 * currentTimeInMs();\r\n}\r\n\r\nexport { getTime }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(633);\n"],"sourceRoot":""}